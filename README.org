TOPICS:

Memoization
Binary Search Trees
Breadth First vs. Depth First search
Heap Sort
Quick Sort
Prefix/Radix sort (or Trie's)
Hashing

* Memoization

Cacheing function results in cases where a function is repeated often
with the same input. This prevents functions from having to compute the
same results over and over. The most obvious case for this is computing
factorials. The factorial of 5 is 4! x 5. Therefore, if 4!, 3!, and 2!
had already been computed, they could be taken from a cache instead of
recomputed each time.

* Sorting
** Insertion Sort

Insertion sort loops through an array, starting at the second element,
and ending at the last element. Each element in the iteration, called
the key, is moved to the left in the array until it's value is is
smaller than the next value down. This process is then repeated for all
values of the list.

5 4 3 2 1   Key: 4 (swap 5 with 4)
4 5 3 2 1   Key: 3 (swap 5 with 3)
4 3 5 2 1          (swap 4 with 3)
3 4 5 2 1   Key: 2 (swap 5 with 2)
3 4 2 5 1          (swap 4 with 2)
3 2 4 5 1          (swap 3 with 2)
2 3 4 5 1   Key: 1 (swap 5 with 1)
2 3 4 1 5          (swap 4 with 1)
2 3 1 4 5          (swap 3 with 1)
2 1 3 4 5          (swap 2 with 1)
1 2 3 4 5   Result

** Heap Sort







